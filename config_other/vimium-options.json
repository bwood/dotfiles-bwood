{
  "settingsVersion": "1.64.6",
  "exclusionRules": [
    {
      "pattern": "https?://mail.google.com/*",
      "passKeys": ""
    }
  ],
  "filterLinkHints": true,
  "waitForEnterForFilteredHints": true,
  "hideHud": false,
  "keyMappings": "#########################################\n\nunmapAll # Use Emacs-style bindings only.\n\n#########################################\n\n# Modifier Keys w/ Emacs Terminology:\n\n# `<c-*>` = ⌃ Control Key; i.e. `C-*`.\n# `<a-*>` = ⌥ Meta Key (Alt/Option); i.e. `M-*`.\n# To clarify, `<a-*>` is `M-*` in the world of Emacs.\n\n# `<m-*>` = ⌘ Command Key (prone to conflicts).\n#   id ⌘ key conflicts in Google Chrome.\n#   It's good to avoid the ⌘ key altogether.\n#   ~ See: http://bit.ly/VUvR7i\n\n# The ⇧ Shift key is not used explicitly. However,\n# all of these keyboard shortcuts are caSe-sensitive.\n# Therefore, `<c-b>` is certainly NOT the same as `<c-B>`.\n# Meaning, the ⇧ Shift key **is** necessary in some cases.\n# You will also need the Shift key for things like `<a-}>`.\n\n#########################################\n# Basic movement\n# Using a combination of mapkey and map so that I can have consistent keys for movement\n* in Visual Mode.\n\nmapkey <c-p> k\nmap k scrollDown\n\nmapkey <c-n> j\nmap j scrollUp\n\nmapkey <c-b> h\nmap h scrollLeft\n\nmapkey <c-f> l\nmap l scrollRight\n\n# M-f\nmapkey <a-ƒ> e\nmap e \"forward word\"\n\n# M-b\nmapkey <a-∫> b\nmap b \"backward word\"\n\nmapkey <c-e> )\nmap ) \"forward sentance\"\n\nmapkey <c-a> (\nmap ( \"backward sentance\"\n\n# move by paragraph, lineboundry, document boundry also possible\n\n# Similar to Emacs `(beginning|end)-of-buffer`..\n# <a-<>\nmap <a-¯> scrollToTop\n# <a->>\nmap <a-˘> scrollToBottom\n\n# Identical to Emacs `scroll-(left|right)`.\nmap <c-x>< scrollToLeft\nmap <c-x>> scrollToRight\n\n# Identical to `scroll-(down|up)-command`.\n# <a-v>\nmap <a-√> scrollPageUp #scrollFullPageUp is hard to follow\nmap <c-v> scrollPageDown\n\n# Identical to Emacs `scroll-(up|down)-line`\n# No KBD shortcut in Emacs by default, so not using.\n# Similar to Emacs `(backward|forward)-paragraph`.\n# <a-{>\n# map <a-”> scrollPageUp\n# <a-}>\n# map <a-’> scrollPageDown\n\n# Identical to Emacs \"get\" in dired.\nmap g reload\n\n# Not implemented in Emacs.\nunmap <a-s> toggleViewSource\nmap <a-ß> toggleViewSource\n\n# Identical to Emacs `delete-window`.\nmap <c-x>k removeTab\nmap <c-x>tr closeTabsOnRight\n# tl has a conflict: see map <c-f> l above.\n# map <c-x>tl close TabsOnLeft\nmap <c-x>to closeOtherTabs\n\n# Not implemented in Emacs.\n# map <c-g><c-u> copyCurrentUrl\n# map <c-g><c-l> LinkHints.activateModeToCopyLinkUrl\n\n# Not implemented in Emacs.\nmap <c-g><c-o> openCopiedUrlInCurrentTab\nmap <c-g><c-O> openCopiedUrlInNewTab\n\n# Not implemented in Emacs.\nmap <c-g>< goUp\nmap <c-g>/ goToRoot\n\n# Not implemented in Emacs.\nmap <c-g>i enterInsertMode\n\nmap <c-x><c-q> enterVisualMode\n#map <c-F> VisualMode.forwardCharacter\n#map <c-B> VisualMode.backwardCharacter\n\n# Not implemented in Emacs.\nmap <c-g>i focusInput\n\n# Similar to Emacs `find-file`.\nmap <space> LinkHints.activateMode\nmap <c-space> LinkHints.activateModeToOpenInNewForegroundTab\nmap <c-x><c-space> LinkHints.activateModeWithQueue\nmap <c-g><c-space> LinkHints.activateModeToOpenInNewTab\n\n# Similar to Emacs `list-directory`.\nmap <c-x><c-d> Vomnibar.activate\nmap <c-x><c-D> Vomnibar.activateInNewTab\n\n# Similar to Emacs `switch-to-buffer`.\nmap <c-x>b Vomnibar.activateTabSelection\n\n# Similar to Emacs `list-buffers`.\nmap <c-x><c-b> Vomnibar.activateBookmarks\nmap <c-x><c-B> Vomnibar.activateBookmarksInNewTab\n\n# Not implemented in Emacs.\n# Similar to Emacs `(previous|next)-buffer`.\n# However, this uses `<c-g>` instead of `<c-x>`.\nmap <c-g><left> goPrevious\nmap <c-g><right> goNext\n\n# Similar to Emacs `other-frame`.\n# Also similar to Emacs `other-window`.\n# The correct mapping is `<c-x>5o`, but not possible.\n# Vimium doesn't support the `o` argument.\n# Instead using `<c-x>o` here.\nmap <c-x>o nextFrame\n\n# Similar to Emacs `set-mark-command`.\n# Similar to Emacs `pop-global-mark`.\n# Can't use `<c-<space>>` it conflicts w/ Chrome.\n# In Chrome, `<space>` scrolls the current document.\n# ------------------------------------------------------------------\n# NOTE: both of these require that you enter a letter\n# that you want to associate with a Vimium mark.\n# e.g. `<c-@>` `a` ... and to return: `<c-x><c-@>` `a`.\n# ------------------------------------------------------------------\nmap <c-@> Marks.activateCreateMode\nmap <c-x><c-@> Marks.activateGotoMode\n\n# Similar to Emacs `isearch-forward`.\n# Similar to Emacs `isearch-repeat-(forward|backward)`.\n# ------------------------------------------------------------------\n# NOTE: Vimium doesn't support repeated `<c-s>`.\n# Instead, use `<c-S>` to move to next result.\n# ------------------------------------------------------------------\n# NOTE: `<c-S>` may conflict w/ SnagIt™. If you run this app,\n# please remap SnagIt™ to resolve this potential conflict.\n# ------------------------------------------------------------------\n# NOTE: Vimium requires that you press the `<enter>` key\n# before shortcuts `<c-S>` and `<c-R>` will actually work.\n# ------------------------------------------------------------------\nmap <c-s> enterFindMode\nmap <c-S> performFind\nmap <c-r> performBackwardsFind\nmap <c-R> performBackwardsFind\n\n# Not implemented in Emacs.\n# Similar to Emacs `(backward|forward)-char`.\n# However, this uses capitals w/ the shift key.\nmap <c-B> goBack\nmap <c-F> goForward\n\n# Not implemented in Emacs.\n# Similar to Emacs `(previous|next)-buffer`.\nmap <c-x><left> previousTab\nmap <c-x><right> nextTab\n\n# Not implemented in Emacs.\n# Similar to Emacs `(previous|next)-buffer`.\nmap <c-x><up> firstTab\nmap <c-x><down> lastTab\n\n# Similar to Emacs `generate-new-buffer`.\n# No KBD shortcut in Emacs by default.\nmap <c-g><c-t> createTab\n\n# Similar to `clone-indirect-buffer-other-window`.\n# The correct mapping is `<c-x>4c`, but not possible.\n# Vimium doesn't support the `c` argument.\nmap <c-x>4 duplicateTab\n\n# Not implemented in Emacs.\n# Similar to Emacs `recover-file`.\n# No KBD shortcut in Emacs by default.\nmap <c-g><c-r> restoreTab\n\n# Similar to `make-frame-command`.\n# The correct mapping is `<c-x>52`, but not possible.\n# Vimium doesn't support the `2` argument.\nmap <c-x>5 moveTabToNewWindow\n\n# Not implemented in Emacs.\n# Similar to `set-window-dedicated-p`.\n# No KBD shortcut in Emacs by default.\nmap <c-g><c-p> togglePinTab\n\n# Not implemented in Emacs.\n# Similar to `buff-move(left|right)`.\n# See package: <http://bit.ly/Z1ZXYg>\n# Also similar to: `(backward|forward)-word`\n# However, this uses capitals w/ the shift key.\nmap <a-B> moveTabLeft\nmap <a-F> moveTabRight\n\n# Similar to Emacs help commands.\nmap <c-h> showHelp",
  "linkHintCharacters": "sadfjklewcmpgh",
  "linkHintNumbers": "0123456789",
  "newTabUrl": "about:newtab",
  "nextPatterns": "next,more,newer,>,›,→,»,≫,>>",
  "previousPatterns": "prev,previous,back,older,<,‹,←,«,≪,<<",
  "regexFindMode": false,
  "ignoreKeyboardLayout": false,
  "scrollStepSize": 60,
  "smoothScroll": true,
  "grabBackFocus": false,
  "searchEngines": "# Jira\ndop: https://jira-secure.berkeley.edu/browse/DRUPALOPS-%s Jira DRUPALOPS\nob: https://jira-secure.berkeley.edu/browse/OPENUCB-%s Jira OPENUCB\nwps: https://jira-secure.berkeley.edu/browse/WPSCON-%s Jira WPSCON\n\n# Pantheon\npd: http://dev-%s.pantheon.berkeley.edu/\npt: http://test-%s.pantheon.berkeley.edu/\npl: http://live-%s.pantheon.berkeley.edu/\n\n# php.net\n# you have to hyphenate function names\nphpf: http://php.net/manual/en/function.%s.php\nphps: http://php.net/search.php?q=%s\n\n\nw: https://www.wikipedia.org/w/index.php?title=Special:Search&search=%s Wikipedia\n\n# More examples.\n#\n# (Vimium supports search completion Wikipedia, as\n# above, and for these.)\n#\ng: https://www.google.com/search?q=%s Google\n# l: https://www.google.com/search?q=%s&btnI I'm feeling lucky...\ny: https://www.youtube.com/results?search_query=%s Youtube\ngm: https://www.google.com/maps?q=%s Google maps\n# b: https://www.bing.com/search?q=%s Bing\n# d: https://duckduckgo.com/?q=%s DuckDuckGo\naz: https://www.amazon.com/s/?field-keywords=%s Amazon\n# qw: https://www.qwant.com/?q=%s Qwant",
  "searchUrl": "https://www.google.com/search?q=",
  "userDefinedLinkHintCss": "div > .vimiumHintMarker {\n/* linkhint boxes */\nbackground: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#FFF785),\n  color-stop(100%,#FFC542));\nborder: 1px solid #E3BE23;\n}\n\ndiv > .vimiumHintMarker span {\n/* linkhint text */\ncolor: black;\nfont-weight: bold;\nfont-size: 12px;\n}\n\ndiv > .vimiumHintMarker > .matchingCharacter {\n}"
}